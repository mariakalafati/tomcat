name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ant unzip

    - name: Install SonarSource Build Wrapper
      run: |
        curl -fsSL https://binaries.sonarsource.com/Distribution/build-wrapper-linux-x86/build-wrapper-linux-x86.zip -o build-wrapper.zip
        unzip build-wrapper.zip
        sudo mv build-wrapper-linux-x86 /usr/local/bin/build-wrapper

    - name: Install Node.js (for SonarScanner)
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install SonarScanner via npm
      run: npm install sonarqube-scanner

    - name: Build with Ant (Compile + C/C++ Build Wrapper)
      run: |
        build-wrapper-linux-x86 --out-dir build_wrapper_output ant compile

    - name: Run SonarScanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npx sonarqube-scanner \
          -Dsonar.projectKey=mariakalafati_tomcat \
          -Dsonar.organization=mariakalafati \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=. \
          -Dsonar.exclusions=**/*.c,**/*.cpp,**/*.h,**/*.hpp,**/test/**,**/docs/** \
          -Dsonar.c.file.suffixes=- \
          -Dsonar.cpp.file.suffixes=- \
          -Dsonar.objc.file.suffixes=- \
          -Dsonar.language=java \
          -Dsonar.java.binaries=output/classes \
          -Dsonar.cfamily.compile-commands=build_wrapper_output/compile_commands.json
